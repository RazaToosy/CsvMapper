<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="Mapping">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Map" maxOccurs="unbounded" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:byte" name="ConnectTo" use="optional"/>
                      <xs:attribute type="xs:byte" name="SourceId" use="optional"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
              <xs:element type="xs:string" name="Destination">
                <xs:annotation>
                  <xs:documentation>If no source then doesn't look in souce csv. Ie need to generate based on Action aloneIf no source then doesn't look in souce csv. Ie need to generate based on Action alone</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="Process">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Command" maxOccurs="unbounded" minOccurs="0">
                      <xs:complexType mixed="true">
                        <xs:sequence>
                          <xs:element type="xs:string" name="Where" minOccurs="0"/>
                          <xs:element type="xs:string" name="Make" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>No Source so this will be blank. To add TES to this column</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute type="xs:string" name="action" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute type="xs:string" name="datatype" use="optional"/>
            <xs:attribute type="xs:byte" name="id" use="optional"/>
            <xs:attribute type="xs:byte" name="if" use="optional"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>